package com.laptrinhjavaweb.controller.web;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import com.laptrinhjavaweb.dto.NewDTO;
import com.laptrinhjavaweb.service.ICategoryService;
import com.laptrinhjavaweb.service.INewService;


@Controller(value = "newControllerOfWeb")
public class NewController {

	@Autowired
	INewService newService;
	
	@Autowired
	ICategoryService categoryService;
	
	
	@RequestMapping(value = "/ctbv", method = RequestMethod.GET)
	public ModelAndView homePage(@RequestParam(value = "id")Long id) {
		ModelAndView mav = new ModelAndView("web/page");
		NewDTO model = new NewDTO();
		model = newService.findById(id);
		mav.addObject("model",model);
		return mav;
	}
	
	@RequestMapping(value = "/categorypage", method = RequestMethod.GET)
	public ModelAndView CategoryPage(@RequestParam("page") int page,
            @RequestParam("limit") int limit,@RequestParam(value = "categoryid") Long categoryid) {
		NewDTO model = new NewDTO();
		model.setPage(page);
		model.setLimit(limit);
		ModelAndView mav = new ModelAndView("web/categorypage");
		Pageable pageable = new PageRequest(page - 1, limit);
		for (NewDTO item: newService.findAll(pageable)) {
			if(item.getCategoryId() == categoryid) {
				List<NewDTO> dto = new ArrayList<>();
				dto.add(item);
				model.setListResult(dto);
			}
			/*
			 * NewDTO newDTO = newConverter.toDto(item); models.add(newDTO); return models;
			 */
		}
		/* model.setListResult(newService.findAll(pageable)); */
		model.setTotalItem(newService.getTotalItem());
		model.setTotalPage((int) Math.ceil((double) model.getTotalItem() / model.getLimit()));
		mav.addObject("model", model);
		return mav;
		}	
}
